/*
! tailwindcss v3.1.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::-webkit-backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.\!fixed {
  position: fixed !important;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-2 {
  top: 0.5rem;
}

.right-2 {
  right: 0.5rem;
}

.bottom-auto {
  bottom: auto;
}

.left-auto {
  left: auto;
}

.-left-96 {
  left: -24rem;
}

.-top-4 {
  top: -1rem;
}

.-left-20 {
  left: -5rem;
}

.top-0 {
  top: 0px;
}

.right-0 {
  right: 0px;
}

.bottom-8 {
  bottom: 2rem;
}

.-left-5 {
  left: -1.25rem;
}

.left-0 {
  left: 0px;
}

.-top-\[0rem\] {
  top: -0rem;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-10 {
  z-index: 10;
}

.m-2 {
  margin: 0.5rem;
}

.m-0\.5 {
  margin: 0.125rem;
}

.m-0 {
  margin: 0px;
}

.m-4 {
  margin: 1rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mt-4 {
  margin-top: 1rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.ml-8 {
  margin-left: 2rem;
}

.ml-20 {
  margin-left: 5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mt-0\.5 {
  margin-top: 0.125rem;
}

.mt-0 {
  margin-top: 0px;
}

.ml-0\.5 {
  margin-left: 0.125rem;
}

.ml-0 {
  margin-left: 0px;
}

.mb-4 {
  margin-bottom: 1rem;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-screen {
  height: 100vh;
}

.h-full {
  height: 100%;
}

.h-6 {
  height: 1.5rem;
}

.h-12 {
  height: 3rem;
}

.h-32 {
  height: 8rem;
}

.h-8 {
  height: 2rem;
}

.h-48 {
  height: 12rem;
}

.h-5 {
  height: 1.25rem;
}

.h-4 {
  height: 1rem;
}

.h-3 {
  height: 0.75rem;
}

.max-h-screen {
  max-height: 100vh;
}

.max-h-full {
  max-height: 100%;
}

.max-h-48 {
  max-height: 12rem;
}

.w-screen {
  width: 100vw;
}

.w-full {
  width: 100%;
}

.w-6 {
  width: 1.5rem;
}

.w-96 {
  width: 24rem;
}

.w-\[10\.5rem\] {
  width: 10.5rem;
}

.w-5 {
  width: 1.25rem;
}

.w-40 {
  width: 10rem;
}

.w-32 {
  width: 8rem;
}

.w-4 {
  width: 1rem;
}

.w-\[28rem\] {
  width: 28rem;
}

.w-\[4\.5rem\] {
  width: 4.5rem;
}

.w-\[30rem\] {
  width: 30rem;
}

.w-8 {
  width: 2rem;
}

.w-3 {
  width: 0.75rem;
}

.w-16 {
  width: 4rem;
}

.w-11 {
  width: 2.75rem;
}

.max-w-md {
  max-width: 28rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-none {
  flex: none;
}

.flex-auto {
  flex: 1 1 auto;
}

.flex-shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.basis-1\/5 {
  flex-basis: 20%;
}

.basis-4\/5 {
  flex-basis: 80%;
}

.basis-1\/3 {
  flex-basis: 33.333333%;
}

.basis-2\/3 {
  flex-basis: 66.666667%;
}

.table-auto {
  table-layout: auto;
}

.border-separate {
  border-collapse: separate;
}

.border-spacing-2 {
  --tw-border-spacing-x: 0.5rem;
  --tw-border-spacing-y: 0.5rem;
  border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
}

.border-spacing-x-3 {
  --tw-border-spacing-x: 0.75rem;
  border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
}

.translate-x-2\/4 {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-10 {
  --tw-translate-y: -2.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[24rem\] {
  --tw-translate-x: 24rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-100 {
  --tw-scale-x: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-y-100 {
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.select-all {
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.resize {
  resize: both;
}

.list-inside {
  list-style-position: inside;
}

.list-disc {
  list-style-type: disc;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-8 {
  gap: 2rem;
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.break-all {
  word-break: break-all;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-base-3 {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-base3) / var(--tw-border-opacity));
}

.border-base-4 {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-base4) / var(--tw-border-opacity));
}

.border-base-5 {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-base5) / var(--tw-border-opacity));
}

.border-blue-dark {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-blue-dark) / var(--tw-border-opacity));
}

.border-purple-dark {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-purple-dark) / var(--tw-border-opacity));
}

.border-green {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-green) / var(--tw-border-opacity));
}

.border-red-dark {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-red-dark) / var(--tw-border-opacity));
}

.border-yellow {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-yellow) / var(--tw-border-opacity));
}

.border-blue {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-blue) / var(--tw-border-opacity));
}

.border-base-2 {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-base2) / var(--tw-border-opacity));
}

.border-red {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-red) / var(--tw-border-opacity));
}

.bg-base-1 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base1) / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-base-2 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base2) / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-blue {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue) / var(--tw-bg-opacity));
}

.bg-base-0 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base0) / var(--tw-bg-opacity));
}

.bg-red {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-red) / var(--tw-bg-opacity));
}

.bg-purple {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-purple) / var(--tw-bg-opacity));
}

.bg-green {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-green) / var(--tw-bg-opacity));
}

.bg-yellow {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-yellow) / var(--tw-bg-opacity));
}

.bg-base-4 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base4) / var(--tw-bg-opacity));
}

.bg-base-3 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base3) / var(--tw-bg-opacity));
}

.bg-opacity-0 {
  --tw-bg-opacity: 0;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.fill-current {
  fill: currentColor;
}

.fill-base-2 {
  fill: rgb(var(--color-base2) / 1);
}

.fill-purple {
  fill: rgb(var(--color-purple) / 1);
}

.fill-blue {
  fill: rgb(var(--color-blue) / 1);
}

.fill-transparent {
  fill: transparent;
}

.fill-base-1 {
  fill: rgb(var(--color-base1) / 1);
}

.stroke-current {
  stroke: currentColor;
}

.stroke-orange {
  stroke: rgb(var(--color-orange) / 1);
}

.stroke-green {
  stroke: rgb(var(--color-green) / 1);
}

.stroke-red {
  stroke: rgb(var(--color-red) / 1);
}

.stroke-blue {
  stroke: rgb(var(--color-blue) / 1);
}

.stroke-purple {
  stroke: rgb(var(--color-purple) / 1);
}

.stroke-base-4 {
  stroke: rgb(var(--color-base4) / 1);
}

.stroke-main {
  stroke: rgb(var(--color-main) / 1);
}

.stroke-2 {
  stroke-width: 2;
}

.stroke-4 {
  stroke-width: 4px;
}

.stroke-16 {
  stroke-width: 16px;
}

.stroke-1 {
  stroke-width: 1;
}

.stroke-3 {
  stroke-width: 3px;
}

.stroke-\[6px\] {
  stroke-width: 6px;
}

.stroke-0 {
  stroke-width: 0;
}

.p-0 {
  padding: 0px;
}

.p-2 {
  padding: 0.5rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-0\.5 {
  padding: 0.125rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.pt-1 {
  padding-top: 0.25rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pb-10 {
  padding-bottom: 2.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pb-0 {
  padding-bottom: 0px;
}

.pr-4 {
  padding-right: 1rem;
}

.pl-3 {
  padding-left: 0.75rem;
}

.pr-6 {
  padding-right: 1.5rem;
}

.pb-8 {
  padding-bottom: 2rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pr-1 {
  padding-right: 0.25rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-baseline {
  vertical-align: baseline;
}

.align-middle {
  vertical-align: middle;
}

.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.font-bold {
  font-weight: 700;
}

.font-normal {
  font-weight: 400;
}

.italic {
  font-style: italic;
}

.leading-none {
  line-height: 1;
}

.text-red {
  --tw-text-opacity: 1;
  color: rgb(var(--color-red) / var(--tw-text-opacity));
}

.text-main {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main) / var(--tw-text-opacity));
}

.text-main-ia {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main-ia) / var(--tw-text-opacity));
}

.text-base-2 {
  --tw-text-opacity: 1;
  color: rgb(var(--color-base2) / var(--tw-text-opacity));
}

.text-blue {
  --tw-text-opacity: 1;
  color: rgb(var(--color-blue) / var(--tw-text-opacity));
}

.text-purple {
  --tw-text-opacity: 1;
  color: rgb(var(--color-purple) / var(--tw-text-opacity));
}

.text-green {
  --tw-text-opacity: 1;
  color: rgb(var(--color-green) / var(--tw-text-opacity));
}

.text-yellow {
  --tw-text-opacity: 1;
  color: rgb(var(--color-yellow) / var(--tw-text-opacity));
}

.text-blue-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-blue-dark) / var(--tw-text-opacity));
}

.text-purple-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-purple-dark) / var(--tw-text-opacity));
}

.text-green-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-green-dark) / var(--tw-text-opacity));
}

.text-red-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-red-dark) / var(--tw-text-opacity));
}

.text-yellow-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-yellow-dark) / var(--tw-text-opacity));
}

.text-base-4 {
  --tw-text-opacity: 1;
  color: rgb(var(--color-base4) / var(--tw-text-opacity));
}

.text-orange {
  --tw-text-opacity: 1;
  color: rgb(var(--color-orange) / var(--tw-text-opacity));
}

.text-base-1 {
  --tw-text-opacity: 1;
  color: rgb(var(--color-base1) / var(--tw-text-opacity));
}

.text-base-5 {
  --tw-text-opacity: 1;
  color: rgb(var(--color-base5) / var(--tw-text-opacity));
}

.opacity-0 {
  opacity: 0;
}

.opacity-20 {
  opacity: 0.2;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-4 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-blue {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(var(--color-blue) / var(--tw-ring-opacity));
}

.ring-offset-4 {
  --tw-ring-offset-width: 4px;
}

.ring-offset-base-1 {
  --tw-ring-offset-color: rgb(var(--color-base1) / 1);
}

.ring-offset-base-2 {
  --tw-ring-offset-color: rgb(var(--color-base2) / 1);
}

.blur-md {
  --tw-blur: blur(12px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-lg {
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-md {
  --tw-drop-shadow: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[stroke-width\] {
  transition-property: stroke-width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-svg {
  transition-property: color, background-color, border-color, fill, stroke, stroke-width, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, stroke-width, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, stroke-width, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-none {
  transition-property: none;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-linear {
  transition-timing-function: linear;
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:top-\[2px\]::after {
  content: var(--tw-content);
  top: 2px;
}

.after\:left-\[2px\]::after {
  content: var(--tw-content);
  left: 2px;
}

.after\:h-5::after {
  content: var(--tw-content);
  height: 1.25rem;
}

.after\:w-5::after {
  content: var(--tw-content);
  width: 1.25rem;
}

.after\:rounded-full::after {
  content: var(--tw-content);
  border-radius: 9999px;
}

.after\:bg-base-1::after {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base1) / var(--tw-bg-opacity));
}

.after\:transition-all::after {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}

.hover\:border-blue-dark:hover {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-blue-dark) / var(--tw-border-opacity));
}

.hover\:bg-base-3:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base3) / var(--tw-bg-opacity));
}

.hover\:bg-blue-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue-dark) / var(--tw-bg-opacity));
}

.hover\:bg-base-2:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base2) / var(--tw-bg-opacity));
}

.hover\:bg-purple-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-purple-dark) / var(--tw-bg-opacity));
}

.hover\:bg-green-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-green-dark) / var(--tw-bg-opacity));
}

.hover\:bg-red-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-red-dark) / var(--tw-bg-opacity));
}

.hover\:bg-yellow-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-yellow-dark) / var(--tw-bg-opacity));
}

.hover\:bg-base-5:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base5) / var(--tw-bg-opacity));
}

.hover\:stroke-main:hover {
  stroke: rgb(var(--color-main) / 1);
}

.hover\:stroke-4:hover {
  stroke-width: 4px;
}

.hover\:text-blue-dark:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-blue-dark) / var(--tw-text-opacity));
}

.hover\:text-purple-dark:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-purple-dark) / var(--tw-text-opacity));
}

.hover\:text-green-dark:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-green-dark) / var(--tw-text-opacity));
}

.hover\:text-red-dark:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-red-dark) / var(--tw-text-opacity));
}

.hover\:text-yellow-dark:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-yellow-dark) / var(--tw-text-opacity));
}

.hover\:text-main-ia:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main-ia) / var(--tw-text-opacity));
}

.hover\:text-main:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main) / var(--tw-text-opacity));
}

.hover\:text-blue:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-blue) / var(--tw-text-opacity));
}

.hover\:text-red:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--color-red) / var(--tw-text-opacity));
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow:hover {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:drop-shadow-xl:hover {
  --tw-drop-shadow: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.hover\:drop-shadow-lg:hover {
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.focus\:border-main:focus {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-main) / var(--tw-border-opacity));
}

.focus\:border-blue:focus {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-blue) / var(--tw-border-opacity));
}

.focus\:border-red:focus {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-red) / var(--tw-border-opacity));
}

.focus\:bg-blue:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue) / var(--tw-bg-opacity));
}

.focus\:text-main:focus {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main) / var(--tw-text-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.active\:bg-blue-darker:active {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue-darker) / var(--tw-bg-opacity));
}

.active\:bg-purple-darker:active {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-purple-darker) / var(--tw-bg-opacity));
}

.active\:bg-green-darker:active {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-green-darker) / var(--tw-bg-opacity));
}

.active\:bg-red-darker:active {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-red-darker) / var(--tw-bg-opacity));
}

.active\:bg-yellow-darker:active {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-yellow-darker) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:pointer-events-auto {
  pointer-events: auto;
}

.peer:checked ~ .peer-checked\:flex {
  display: flex;
}

.peer:checked ~ .peer-checked\:translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:border-red {
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-red) / var(--tw-border-opacity));
}

.peer:checked ~ .peer-checked\:bg-blue {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-purple {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-purple) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-green {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-green) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-red {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-red) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-yellow {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-yellow) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-base-4 {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-base4) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:bg-opacity-30 {
  --tw-bg-opacity: 0.3;
}

.peer:checked ~ .peer-checked\:opacity-100 {
  opacity: 1;
}

.peer:checked ~ .peer-checked\:after\:translate-x-full::after {
  content: var(--tw-content);
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:after\:border-base-1::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(var(--color-base1) / var(--tw-border-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-blue-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-blue-dark) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-purple-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-purple-dark) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-green-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-green-dark) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-red-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-red-dark) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-yellow-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-yellow-dark) / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:hover\:bg-main:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--color-main) / var(--tw-bg-opacity));
}

.peer:hover ~ .peer-hover\:stroke-6 {
  stroke-width: 6px;
}

.peer:hover ~ .peer-hover\:text-blue-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-blue-dark) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-purple-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-purple-dark) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-green-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-green-dark) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-red-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-red-dark) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-yellow-dark {
  --tw-text-opacity: 1;
  color: rgb(var(--color-yellow-dark) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-main-ia {
  --tw-text-opacity: 1;
  color: rgb(var(--color-main-ia) / var(--tw-text-opacity));
}

.peer:hover ~ .peer-hover\:text-base-5 {
  --tw-text-opacity: 1;
  color: rgb(var(--color-base5) / var(--tw-text-opacity));
}

.peer:focus ~ .peer-focus\:outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}